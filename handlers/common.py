# handlers/common.py
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher.filters import Text
from keyboards.misc import help_keyboard, map_keyboard
from handlers.user_profile import start_profile_settings
from config import MAIN_MENU_COMMANDS

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –∫–æ–º–∞–Ω–¥ /start, /help –∏ –æ–±—â–µ–π –ø–æ–º–æ—â–∏
def register(dp):
	main_menu_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
	main_menu_keyboard.add(*MAIN_MENU_COMMANDS)

	@dp.message_handler(commands=['start'], state='*')
	async def cmd_start(message: Message):
		await message.answer("–ö–æ—Ç–∏–∫, –ø—Ä–∏–≤–µ—Ç!‚ú®", reply_markup=main_menu_keyboard)

	@dp.message_handler(commands=['help'], state='*')
	@dp.message_handler(Text(equals="–ü–æ–º–æ—â—å"), state='*')
	async def cmd_help(message: Message):
		txt = """
–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—Å—å—è –¥–æ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏ ü§ç
–ù–∞—à –∞–¥—Ä–µ—Å: —É–ª–∏—Ü–∞ –ú–∞—Ä–∏–Ω—ã –†–∞—Å–∫–æ–≤–æ–π, 4–ê ‚ú®"""
		await message.answer(txt, reply_markup=help_keyboard())

	@dp.message_handler(Text(equals="–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ"), state='*')
	@dp.message_handler(commands=['profile'], state='*')
	async def cmd_profile(message: Message, state: FSMContext):
		await start_profile_settings(message, state)

	@dp.callback_query_handler(lambda call: call.data.endswith("_way"), state='*')
	async def show_map(call: CallbackQuery, state: FSMContext):
		captions = {
			"Station_way": "–ö–∞–∫ –ø—Ä–æ–π—Ç–∏ –æ—Ç –≤–æ–∫–∑–∞–ª–∞ –¥–æ —Å—Ç—É–¥–∏–∏",
			"Bus_way": "–ö–∞–∫ –ø—Ä–æ–π—Ç–∏ —Å —É–ª–∏—Ü—ã –¢—É—Ä–≥–µ–Ω–µ–≤–∞ –¥–æ —Å—Ç—É–¥–∏–∏",
		}
		file_name = call.data + ".jpg"
		await call.message.delete()
		await call.message.answer_photo(open(file_name, "rb"), caption=captions[call.data], reply_markup=map_keyboard(call.data))

	@dp.callback_query_handler(lambda call: call.data == "help_back", state='*')
	async def help_back(call: CallbackQuery, state: FSMContext):
		await cmd_help(call.message)
		await call.message.delete()
