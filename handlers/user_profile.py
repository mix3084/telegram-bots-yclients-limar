from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from aiogram.dispatcher.filters.state import State, StatesGroup
from storage.user_memory import remember_user_profile, get_user_profile

class ProfileForm(StatesGroup):
	first_name = State()
	last_name = State()
	middle_name = State()
	phone = State()
	email = State()

async def start_profile_settings(message: types.Message, state: FSMContext):
	profile = get_user_profile(message.from_user.id)
	if profile:
		text = f"\n*–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:*\n"
		text += f"üë§ –§–ò–û: {profile.get('last_name', '-')} {profile.get('first_name', '-')} {profile.get('middle_name', '-')}\n"
		text += f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {profile.get('phone', '-')}, ‚úâÔ∏è Email: {profile.get('email', '-')}\n"
	else:
		text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –î–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º!"
	keyboard = types.InlineKeyboardMarkup()
	keyboard.add(types.InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="EditProfile"))
	await message.answer(text, reply_markup=keyboard)

async def edit_profile_handler(call: CallbackQuery, state: FSMContext):
	await call.message.edit_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ *–∏–º—è*:", parse_mode='Markdown')
	await state.set_state(ProfileForm.first_name)

async def set_first_name(message: types.Message, state: FSMContext):
	await state.update_data(first_name=message.text)
	await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É *—Ñ–∞–º–∏–ª–∏—é* (–µ—Å–ª–∏ –µ—Å—Ç—å, –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ -):", parse_mode='Markdown')
	await state.set_state(ProfileForm.last_name)

async def set_last_name(message: types.Message, state: FSMContext):
	await state.update_data(last_name=message.text)
	await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ *–æ—Ç—á–µ—Å—Ç–≤–æ* (–µ—Å–ª–∏ –µ—Å—Ç—å, –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ -):", parse_mode='Markdown')
	await state.set_state(ProfileForm.middle_name)

async def set_middle_name(message: types.Message, state: FSMContext):
	await state.update_data(middle_name=message.text)
	await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à *—Ç–µ–ª–µ—Ñ–æ–Ω* –Ω–∞—á–∏–Ω–∞—è —Å +7:", parse_mode='Markdown')
	await state.set_state(ProfileForm.phone)

async def set_phone(message: types.Message, state: FSMContext):
	if not message.text.startswith('+7') or not message.text[1:].isdigit():
		await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü—Ä–∏–º–µ—Ä: +79001234567")
		return
	await state.update_data(phone=message.text)
	await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à *email* (–µ—Å–ª–∏ –µ—Å—Ç—å, –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ -):", parse_mode='Markdown')
	await state.set_state(ProfileForm.email)

async def set_email(message: types.Message, state: FSMContext):
	await state.update_data(email=message.text)
	user_data = await state.get_data()
	remember_user_profile(
		user_id=message.from_user.id,
		first_name=user_data.get("first_name"),
		last_name=user_data.get("last_name"),
		middle_name=user_data.get("middle_name"),
		phone=user_data.get("phone"),
		email=user_data.get("email")
	)
	await message.answer("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
	await state.finish()
